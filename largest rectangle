#include<bits/stdc++.h>

using namespace std;

int main(){
int n;
cin>>n;
vector<int>arr(n);
for(int i=0;i<arr.size();i++){
cin>>arr[i];
}

  int area=0;
          int maxarea=0;

      vector<int>pse(arr.size());
      vector<int>nse(arr.size());

        stack<int>stack;

        for(int i=0;i<arr.size();i++){
            if(stack.empty()){
               stack.push(i);
               pse[i]=-1;
            }
            else if(arr[i]>arr[stack.top()]){
               
                pse[i]=stack.top();
                 stack.push(i);
            }
            else{
                while(!stack.empty()&& arr[i]<=arr[stack.top()]){
                    stack.pop();
                }
                if(stack.empty()){
                   pse[i]=-1;
                   stack.push(i);
                }
                else{
                    pse[i]=stack.top();
                    stack.push(i);
                }
                
            }
        }
         
         while(!stack.empty()){
             stack.pop();
         }
         for(int i=arr.size()-1;i>=0;i--){
            if(stack.empty()){
               stack.push(i);
               nse[i]=i+1;
            }
            else if(arr[i]>arr[stack.top()]){
               
                nse[i]=stack.top();
                 stack.push(i);
            }
            else{
                while(!stack.empty()&& arr[i]<=arr[stack.top()]){
                    stack.pop();
                }
                if(stack.empty()){
                   nse[i]=arr.size();
                   stack.push(i);
                }
                else{
                    nse[i]=stack.top();
                    stack.push(i);
                }
                
            }
        }

        
        

        for(int i=0;i<arr.size();i++){
            area=arr[i]*(nse[i]-pse[i]-1);
            maxarea=max(maxarea,area);
        }
       cout<<maxarea;
return 0;
}
